using System;
using ClassLib_A1;
/*Q1. Create a abstract class Account having private instance member Id, Name Balanceamt. 
Id should be generated by application. 
Write readonly property for id
Write getter setter for balance , it should be accessible only in child class.
Write getter setter for name , length of the name can not be more then 15 character.
Create method deposit who’s job is to increase Balanceamt by the amount deposited by account holder. 
Create abstract method withdraw. 
Create two child class saving and current.
In saving Account negative balance not allowed and account holder have to maintain minimum balance of 1000
In current Account negative balance is allowed.
Override withdraw method of parent class who’s job is to decrease Balanceamt by the amount  withdrawn by account holder.
Write toString method to display Id Name and balance.
Your application should create array of account class and store 3 object of child class. 
When you load application it should print name of bank.*/
namespace ConsoleApp_A1
{
    
    class Program
    {
        static void Main(string[] args)
        {
            Account[] acArr = new Account[3];
            // acArr[0] = new Saving("abcdefghijklmnopqrst", 3000);     //Name length exceed than 15 character
            acArr[0] = new Current("tom", 30000);
            acArr[1] = new Saving("todd", 15000);
            acArr[2] = new Saving("john", 35000);

            foreach (Account i in acArr)
                Console.WriteLine(i.ToString());

            Console.WriteLine("\tDepositing 200 each....");
            try
            {                  
                foreach (Account i in acArr)
                {
                    //i.deposit(-200);                                   //Error amount can't be negative
                    i.deposit(200);
                    Console.WriteLine(i.ToString());
                }
            }
            catch
            {
                Console.WriteLine("Cant Deposite amount");
            }

            Console.WriteLine("\tWithdrawing 100 each....");
            try
            {
                foreach (Account i in acArr)
                {
                    if (i is Current)
                    {
                        i.withdraw(40000);                        //current Account negative balance is allowed. 
                        Console.WriteLine(i.ToString());
                    }
                    else
                    {
                        i.withdraw(100);                       //Error: amount can't be negative
                        //i.withdraw(100);
                        Console.WriteLine(i.ToString());
                    }
                }
            }
            catch
            {
                Console.WriteLine("Can't withdraw amount");
            }
            Console.ReadLine();
        }
    }
}
